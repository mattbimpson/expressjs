{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "ExpressJS API",
    "description": "An example ExpressJS API with Typescript, Jest & Swagger."
  },
  "basePath": "/",
  "tags": [
    {
      "name": "API",
      "description": "Example API"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/book/all": {
      "get": {
        "summary": "Gets a list of all books.",
        "responses": {
          "200": {
            "description": "Expected response to a valid request",
            "schema": {
              "$ref": "#/definitions/Books"
            }
          },
          "default": {
            "description": "unexpected error"
          }
        }
      }
    },
    "/book/:bookId": {
      "get": {
        "summary": "Gets a book by it's id.",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "description": "The book id.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Expected response to a valid request",
            "schema": {
              "$ref": "#/definitions/Books"
            }
          },
          "default": {
            "description": "unexpected error"
          }
        }
      }
    },
    "/book": {
      "post": {
        "summary": "Creates a book given a book object.",
        "parameters": [
          {
            "name": "book",
            "in": "body",
            "required": true,
            "description": "The book object to create.",
            "type": "#/definitions/Book"
          }
        ],
        "responses": {
          "200": {
            "description": "Expected response to a valid request",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "unexpected error"
          }
        }
      }
    }
  },
  "definitions": {
    "Book": {
      "required": ["id", "title", "description"],
      "properties": {
        "id": {
          "type": "integer",
          "uniqueItems": true
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "author": {
          "type": "string"
        }
      }
    },
    "Books": {
      "type": "array",
      "$ref": "#/definitions/Book"
    }
  }
}